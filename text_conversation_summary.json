[
  {
    "block_summary": "Discussion on challenges with Docker image security and supply chain risks.",
    "block_index": 0,
    "block_start": "00:00:00",
    "block_end": "00:10:55",
    "connected_items": [
      {
        "timestamp": "00:00:00",
        "summary_point": "- Michael discusses challenges in Europe related to Docker images and security concerns. (00:00:00)",
        "transcript_part": "00:00:00 - Michael:\n\nAlready field, of course. I'm thinking like. there are some things with them also busy like in my mind from\n\n00:00:10 - You:\n\nmmm\n\n00:00:12 - Michael:\n\nHow to say it's big big challenges in the Netherlands or in Europe as well.\n\n00:00:17 - You:\n\nYeah.\n\n00:00:20 - Michael:\n\nIt's not like a new new use case, but What I see is that many companies and organizations in Europe are like repeating themselves with special with the docker images. They create because There's a use case or there's a problem. What's the problem problem is that? images on the internet even from trusted suppliers are not Vocal images of course are not safe. why are they not safe or we don't know if they are safe because Many suppliers. They do not take the time to harden their images to make sure that there's nothing wrong in it and to give a good coverage on scans and stuff like that. So, I don't know if you have you know anything about the if you work with kubernetes."
      },
      {
        "timestamp": "00:01:22",
        "summary_point": "- You acknowledge the issues and mention awareness of how Kubernetes works. (00:01:22)",
        "transcript_part": "00:01:22 - You:\n\nHmm. I I haven't worked with it, but I know how it works.\n\n00:01:27 - Michael:\n\nbut Yeah, yeah, of course. So we have a Docker image and there are many vulnerability scanning tools.\n\n00:01:36 - You:\n\nYes.\n\n00:01:37 - Michael:\n\nMany now comes to Fun Part vulnerability scanning tools. Most of them. They they do not really scan the whole Docker image to artifact note. They only can What's in the package manager? So so you you know, if you let's say if you need to install everything with the package manager, otherwise, it will not have a good coverage. cover. So the thing is many organizations do not know what they are pulling in. Because they let's say they do a skin with trivia or graph to scanning tools open source. They they get like, oh we have very low CVS and they immediately immediately think that their image is safe, but they have only scanned like 20 or 30 percent of the artifact."
      },
      {
        "timestamp": "00:02:31",
        "summary_point": "- Michael highlights the limitations of vulnerability scanning tools in Docker images. (00:02:31)",
        "transcript_part": "00:02:31 - You:\n\nhmm\n\n00:02:31 - Michael:\n\nWhat effect? Because now it comes to form the problem men the suppliers and organizations use do not use always use the package manager for installing. Their application dependencies and stuff like that.\n\n00:02:48 - You:\n\nWhen you say the packet manager you mean Ubuntu?\n\n00:02:51 - Michael:\n\nit's Yeah Ubuntu deviant. redhead you young apps that's\n\n00:02:56 - You:\n\nYeah.\n\n00:02:59 - Michael:\n\npackage manager and all the scanning tools always use the package manager\n\n00:03:03 - You:\n\nYes.\n\n00:03:04 - Michael:\n\nfirst problem. So so we have not a good coverage. In that field like I mean covered.\n\n00:03:09 - You:\n\nRight because the way that they would\n\n00:03:10 - Michael:\n\nbefore\n\n00:03:11 - You:\n\ninstall it is how\n\n00:03:14 - Michael:\n\nThey do let's say they build artifact and they want to have it in their base image Ubuntu again.\n\n00:03:21 - You:\n\nYeah.\n\n00:03:23 - Michael:\n\nAnything mostly used to copy\n\n00:03:24 - You:\n\nDoesn't matter.\n\n00:03:26 - Michael:\n\nstatement. In the docker file, so they copy the artifact in the image and also other stuff also. To to have it included in image so functionally it works. But security wise that's a big problem. Why because we"
      },
      {
        "timestamp": "00:03:44",
        "summary_point": "- You discuss the complications of package managers and security in Docker images. (00:03:44)",
        "transcript_part": "00:03:44 - You:\n\nYou just copied something from another Docker image. It affected can be a dependency. I've done a test with a very very vulnerable application. Like let's say if you look it up you will get enough CVS, but when I scan it when I used the copy statement in the image, then it will completely bypass every scanner. So no scanner things can find. That artifact and then so it's mostly supply chain security what we're talking about. But that's a big problem.\n\n00:04:18 - You:\n\nAnd can I ask something here? Because there's something that has come up multiple times so supply chain security. Today you just change you you get to a better tool you you get to see all the issues all the errors in your supply chain. What does that change because to I don't know. I'm just gonna make it them but if if you see oh, I have a thousand criticals across all of my All of the libraries that they use what you will do is say hmm. Okay, I will wait until they are sold because I cannot move away from this libraries that I'm using and you wait until they're solved and the other way you wait until their souls as well. It's just now you have more words associated with it.\n\n00:05:15 - Michael:\n\nYeah, I agree with that part. But the first thing in Security in risks, let's say security risk.\n\n00:05:22 - You:\n\nIs understanding them.\n\n00:05:23 - Michael:\n\nalways identification and understanding, so if you're you're\n\n00:05:25 - You:\n\ntotally\n\n00:05:27 - Michael:\n\nSo if you're you're now, oh, that's a problem. Then you can tackle that.\n\n00:05:30 - You:\n\nThat's true.\n\n00:05:31 - Michael:\n\nSo it's with Supply chains. Also the same let's say you can just ignore everything and or you know about them, but the thing is you also need to do something about it and now\n\n00:05:42 - You:\n\nYeah.\n\n00:05:42 - Michael:\n\ncall problem like many organizations in the docker field and your field. your field. Are trying creating their own wheel? For solving that problem in Docker images. So the first problem was transparency coverage. We do not have a full coverage. The second problem is there's so many CVS in the base image.\n\n00:06:04 - You:\n\nYeah. That even suppliers don't want to fix that. They don't take the third time to fix that issue. so so you're bringing something inside and It's it can let's say it can have thousand criticals in it with that\n\n00:06:20 - You:\n\nNo.\n\n00:06:21 - Michael:\n\nthe supplier focusing on that why because supplier always focusing on functionality above security.\n\n00:06:29 - You:\n\ntotally"
      },
      {
        "timestamp": "00:06:30",
        "summary_point": "- Michael emphasizes the impact of supply chain security issues and the focus on functionality over security. (00:06:30)",
        "transcript_part": "00:06:30 - Michael:\n\nAnd yeah, of course an organization organization can say that. Oh, yeah, it's the supplier fault. So we will wait on the supplier. But otherwise, let's say we have a concept of security called zero trust.\n\n00:06:46 - You:\n\nOf course.\n\n00:06:47 - Michael:\n\nDo not trust but verify always. check always control and not only in the open source field, but also for the suppliers why because\n\n00:06:57 - You:\n\nOf course.\n\n00:06:58 - Michael:\n\nthe most recent\n\n00:06:59 - You:\n\nI mean, I I totally agree with what you're saying and the key question that I always have insecurities, you know, like Because I see this problems. Like there are a lot of supply chain attacks. Like you can even just make it specific to specific like just in typescript just with node. You have a million of dependencies and you're gonna have so many vulnerabilities you are not going to be able to like listen, but"
      },
      {
        "timestamp": "00:07:29",
        "summary_point": "- You express concerns about the overwhelming vulnerabilities in modern software supply chains. (00:07:29)",
        "transcript_part": "00:07:29 - Michael:\n\nYes.\n\n00:07:30 - You:\n\nthe thing is once you have this how has this helped you, you know, like in my mind this has negatively helped you somehow because now you have more things to worry about not less.\n\n00:07:42 - Michael:\n\nGot the thing is if with security the problem with security, let's say that it is not really you do not get functionality as in what the end user expects.\n\n00:07:53 - You:\n\nMm-hmm.\n\n00:07:54 - Michael:\n\nOh, yeah. See, let's say if you hard on something or you you force compliancy in a environment yet. And you should also does not really care because they want the functionality they do not care. But when when something bad happens, then it will of course so the value\n\n00:08:10 - You:\n\nTake care.\n\n00:08:13 - Michael:\n\nis not Immediately seen it's more like what does it prevent eventually? So what what really are there?\n\n00:08:21 - You:\n\nOf course.\n\n00:08:24 - Michael:\n\nThe thing is also with this problem. So let's say a company has. Wants to make their environment more secure. So they have this problem what you say like thousand CVS, they know everything what can they do about it? So now we come to a solution. So but first we need to see it as a problem."
      },
      {
        "timestamp": "00:08:43",
        "summary_point": "- Michael addresses the necessity of identifying security risks and the importance of preventative measures. (00:08:43)",
        "transcript_part": "00:08:43 - You:\n\nMm-hmm.\n\n00:08:43 - Michael:\n\nAnd what are the risk associated with let's say without 100% coverage. There are some risk. Let's say some work someone can download malware very easy. Hart me for checking also their I I recently saw by with the company supply chain. And what else I was that every developer had a Docker host. and and what problem was they could pull every image from the internet from local hope with the registry of course, but intermediate receipt but intermed Like Nexus, but still they can pull everything what they want. They do only treaty scan. And they like the vulnerability Scan they get only 20% coverage or something like that and they made the Assumption was oh it is safe. So we are doing already very good. Now comes the fun part. I made an image a custom image with icar test virus. And to show them proof like you can now download very easy malware without. Any control in the and upper Scout"
      },
      {
        "timestamp": "00:09:50",
        "summary_point": "- You mention a scenario involving malware injection to demonstrate security risks in software environments. (00:09:50)",
        "transcript_part": "00:09:50 - You:\n\nNo. totally\n\n00:09:53 - Michael:\n\nalso not from registry. No, you can very easily bypass those parts. So also rents also other other stuff.\n\n00:10:00 - You:\n\ntotally\n\n00:10:02 - Michael:\n\nWhat's you can think about? So that's the risk is you can pull something inside. Yeah.\n\n00:10:09 - You:\n\nmmm\n\n00:10:10 - Michael:\n\nThat inside that the questions what can you pull them? Yeah, you can pull everything.\n\n00:10:14 - You:\n\nAnything everything?\n\n00:10:16 - Michael:\n\neverything you can pull everything so so it's very\n\n00:10:20 - You:\n\nIn the end you're running these inside of your production environment. So like"
      },
      {
        "timestamp": "00:10:25",
        "summary_point": "- Michael shares insights on the potential dangers of deploying malicious images in production environments. (00:10:25)",
        "transcript_part": "00:10:25 - Michael:\n\nYes, the fun part was that I could easily deploy also that virus image.\n\n00:10:30 - You:\n\nhmm\n\n00:10:31 - Michael:\n\nLet's say I can create a a holy pot image that looks like a working application image.\n\n00:10:40 - You:\n\nOf course and collects all the data.\n\n00:10:41 - Michael:\n\nalso at the Yeah. Yeah, but I can also add a virus to it and but it actually so from a developer perspective or end user or how you operations engineer perspect.\n\n00:10:52 - You:\n\nhmm"
      },
      {
        "timestamp": "00:10:55",
        "summary_point": "- You and Michael discuss the risks associated with unsecured Docker images and the ease of introducing malware. (00:10:55)",
        "transcript_part": ""
      }
    ]
  },
  {
    "block_summary": "Addressing security vulnerabilities in container images and the need for comprehensive scans.",
    "block_index": 1,
    "block_start": "00:11:10",
    "block_end": "00:22:47",
    "connected_items": [
      {
        "timestamp": "00:11:13",
        "summary_point": "- Michael discusses the lack of security measures in certain workspaces compared to other fields, highlighting the need for secure base images. (00:11:13)",
        "transcript_part": "00:11:13 - Michael:\n\norigin organization by so much money for security. for every other field so workspaces like fire scanning for\n\n00:11:20 - You:\n\nmmm\n\n00:11:25 - Michael:\n\nMany fields like for firewall or for segmentation. And but this field it's completely like there's not this field the\n\n00:11:34 - You:\n\nthe Wild West\n\n00:11:36 - Michael:\n\nproblem is not\n\n00:11:38 - You:\n\nunderstood yet\n\n00:11:39 - Michael:\n\nUnderstood yet. Yes, very good. And that's that's the problem first problem like like Why are we doing so much money for every other field like to make it so secure and then we have like the\n\n00:11:53 - You:\n\na big Open Door\n\n00:11:53 - Michael:\n\nfour. Yeah, yeah or back door open for everyone or from their open for everyone. So it's a very yeah now I don't do not want to say stupid of course, but it's not smart.\n\n00:12:05 - You:\n\nIt is. Mm-hmm."
      },
      {
        "timestamp": "00:12:07",
        "summary_point": "- The conversation touches on the challenges organizations face in addressing security risks, including using Alpine base images and the importance of securing base layer vulnerabilities. (00:12:07)",
        "transcript_part": "00:12:07 - Michael:\n\nWhy are you putting so many vaults in place and open a big world for everyone that can use that? So that's the problem. How do you solve it now now comes the part organizations try to solve this issue themselves, and they do a very bad job at least at the organization where I worked.\n\n00:12:30 - You:\n\nMm-hmm.\n\n00:12:31 - Michael:\n\nLike they let's say they use Alpine base images instead of devium to to make a minimal footprint. Yeah. Okay yourself something but not The will risk because you still have a big risk. You can help an image. You can also bypass package man. You're very easy with copy statements. So I'm a big follower of chianguard. I love their philosophy. about this part also so concept comes to my mind and I will and that is What if we have a company in Europe? that Has a service model for this use case like secure images security as a service. So instead of every company trying to solve this issue themself. They can also like pay another company to to deliver them those base images with fully compliency fully fully secure. Let's say zero CV images.\n\n00:13:37 - You:\n\nright, but if there is a CV in the library that they want to use\n\n00:13:43 - Michael:\n\nAnd the thing is most cve's like there are some CVS in the base. There are CVS in the image and they are CVS in the dependencies.\n\n00:13:53 - You:\n\nYes.\n\n00:13:53 - Michael:\n\nSo we of course we need to make a separation of those. So now we the thing is the the challenge they now have is mostly on the underlaying layer that there are so many open doors in the underlaying layer lock.\n\n00:14:07 - You:\n\nunderlying\n\n00:14:09 - Michael:\n\nIn the base image layer so not on the spec. So so the focus is on that part. Of course, we can also do focus on the dependency part, but I see first the image part because I see that that's a very big challenge for organizations for the dependency part. Yeah, if they an organization should like use a good software composition analysis tool and also like\n\n00:14:38 - You:\n\nOkay, so do I get that do I get that\n\n00:14:39 - Michael:\n\ntruck\n\n00:14:41 - You:\n\ncorrectly that for you would think is more? Important are the base layer CVS. So the ones that are in Debian in Alpine in all of these in\n\n00:14:54 - Michael:\n\nBasically, yes, and also not only TVs but the coverage because how do you know if if you're you pull the image? That it's safe that it's covered correctly like in how do you know if you scan it hundred percent? Because you can bypass the package manager very easily. And let's say you you can now scan image on the internet from Debian. And you will see their star holder CVS in it.\n\n00:15:24 - You:\n\nYeah.\n\n00:15:24 - Michael:\n\nAnd also serious like and you can also do the same on something else and you see there one, but the functionality is the same. so now\n\n00:15:35 - You:\n\nMmm, can I ask you something here?\n\n00:15:38 - Michael:\n\nYeah.\n\n00:15:42 - You:\n\nWhy doesn't this exist because I assume like for example, I just know from AWS if you want to upload something to a kubernetes cluster there, you have to upload it to the ECR and I assume there are some Security checks there that happen on.\n\n00:15:59 - Michael:\n\nthe"
      },
      {
        "timestamp": "00:16:00",
        "summary_point": "- Michael emphasizes the need for comprehensive security checks beyond basic scans performed by large companies like AWS. (00:16:00)",
        "transcript_part": "00:16:00 - You:\n\nI don't know. I'm just\n\n00:16:02 - Michael:\n\nThey do what the problem that I have described. There are there is a solution. There are two companies not one company. That has a solution for this. It's the company chain got what I used. But but anyway AWS Google every big company Do do a very basic scanning. They do not comprehensive scanning. They do not check the coverage. They do not check. Hey is everything done by the package manager? They only scan the basic privy scan or graph scan mostly. So that really have this challenges.\n\n00:16:36 - You:\n\nYeah.\n\n00:16:38 - Michael:\n\nalso, but that's why they have a shared responsibility more of course for this part because if a customer\n\n00:16:44 - You:\n\nYeah.\n\n00:16:45 - Michael:\n\nlet's say pulls a virus image with the virus then it's not their responsibility. Is the possibility of the customer?\n\n00:16:54 - You:\n\nOf course.\n\n00:16:55 - Michael:\n\nso so that's that's the problem because they Do not reach scan it. Like let's say they have their integrated registry. There's also go Harbor. garbers also registry open source, but from VMware But it has also integrated scanning with trivia. And the results if images being pulled with go Harbor it will automatically scan it like the security check. but it's not trustworthy why because Why? It only scans the package manager. So you have layer Gap that we do not.\n\n00:17:29 - You:\n\nhmm\n\n00:17:31 - Michael:\n\nknow what's in in there. So the this model is not new, but it does not exist in Europe yet. So America it exists in US it exists the secure images as a servers. So chain guard is one of the biggest security kubernetes security companies. They are also.\n\n00:17:51 - You:\n\nI mean as a European company, I can also just use checkout. No.\n\n00:17:57 - Michael:\n\nAnd there are some how do you say it's notes for that? I'll say I think their data less time I checked it was in in Us stores stored in us. So if you want apply to gpdr you have\n\n00:18:09 - You:\n\nright\n\n00:18:12 - Michael:\n\nproblem.\n\n00:18:13 - You:\n\nHmm."
      },
      {
        "timestamp": "00:18:14",
        "summary_point": "- The discussion explores the concept of secure images as a service, offering a solution for organizations to obtain compliant and secure base images. (00:18:14)",
        "transcript_part": "00:18:14 - Michael:\n\nso\n\n00:18:14 - You:\n\nI couldn't they just open up an AWS region in Europe and to it from\n\n00:18:18 - Michael:\n\ntake\n\n00:18:18 - You:\n\nthere?\n\n00:18:19 - Michael:\n\nThey can but they are not doing it. I don't know why there's probably a use case for that or they are still growing in that field. But it's also like it's one Contender. Let's say Your Azure you have obvious you have Google like three big companies contending with each other. So I think another company.\n\n00:18:39 - You:\n\nOf course. another solution a chain guard competitor would be something that's\n\n00:18:47 - Michael:\n\nVery good and also your specified because the government in year Europe in the Netherlands, at least they are very very strict with what they use. So if you you can't say to them use Gengar, they will not use it.\n\n00:19:01 - You:\n\nmmm\n\n00:19:01 - Michael:\n\nWell say no we rather do the dry method and use the company outside of the Netherlands. Well Microsoft has exemption, of course because you know pockets and So that's the use case a big problem. That really does not get the attention that it should get. and there's a good solution also for that of course and that is using Of course. images that Only allow using the package manager for adding something to it to have a consistency and also this rulers concept. So there are many opens. There's also open source tools. The chain guard has open sourced. Ideal ideally used for that. So the secure images serves what does itself it solves the problem that companies do not need to create their own. images\n\n00:20:02 - You:\n\nYeah.\n\n00:20:02 - Michael:\n\nalso Supplier images because it's not like it's not limited to only tempering Java or golang or something else. No, it's It can be broader. So if you do not trust a specific supplier, like open source supplier, of course because otherwise, why are you paying for some Supply? Yeah, then you can use the secure images as a server feature.\n\n00:20:31 - You:\n\nYeah, that makes sense.\n\n00:20:33 - Michael:\n\nyeah, it's a problem but it's not it does not get the attention if it deserves if you ask me and Because you can put everything in it. And yeah.\n\n00:20:43 - You:\n\nmmm\n\n00:20:45 - Michael:\n\nI can easily I've also demonstrated it. I gave a presentation like three months ago about this. Demonstrated it also like how easy it is to bypass every scanner in an environment in the production of Art.\n\n00:21:02 - You:\n\nYeah."
      },
      {
        "timestamp": "00:21:03",
        "summary_point": "- The conversation delves into the risks associated with Docker images containing malware and the need for stricter security measures. (00:21:03)",
        "transcript_part": "00:21:03 - Michael:\n\nAnd you have now like twenty eight twenty percent of every image in Docker herb has malware in it. And not only dockerhub but also also other registries, of course so due to give let's say a full permission for to for everyone to pull from Registries like dockerhope or other places. It's a bit the risk are very big if you ask me. So that's the problem.\n\n00:21:33 - You:\n\nThat's fair."
      },
      {
        "timestamp": "00:21:36",
        "summary_point": "- Michael plans to demonstrate the ease of bypassing security scanners and further address the issue of hidden vulnerabilities in Docker images. (00:21:36)",
        "transcript_part": "00:21:36 - Michael:\n\nI think it can be a good solution. These cases is there but there's\n\n00:21:40 - You:\n\nM.\n\n00:21:43 - Michael:\n\nstill a work in progress. I will also I've also meeting upcoming Friday with someone else. That we will also discuss this part and I will also demonstrate it to him in real life. I mean\n\n00:22:00 - You:\n\nYeah. Yeah, I'm just gonna rephrase the whole discussion that we just had so"
      },
      {
        "timestamp": "00:22:05",
        "summary_point": "- You summarize the key problem of hidden CVEs and viruses in Docker images, stressing the prevalence of malware within container registries. (00:22:05)",
        "transcript_part": "00:22:05 - Michael:\n\nYeah.\n\n00:22:05 - You:\n\nSo basically the problem that you're talking about is that you can hidden cve's in Docker images and\n\n00:22:13 - Michael:\n\nOf course.\n\n00:22:15 - You:\n\nyeah viruses basically 20% of all\n\n00:22:16 - Michael:\n\nfar more\n\n00:22:21 - You:\n\nImages on Docker Hub have viruses inside of them basically today.\n\n00:22:25 - Michael:\n\nYeah.\n\n00:22:27 - You:\n\nThere's only superficial scans that are done with vulnerability scanners. And so this allows for many issues to come not only on the application Level, but also already on the base OS level you get a lot of vulnerab."
      }
    ]
  },
  {
    "block_summary": "Enhancing Docker image security through minimal dependencies and package manager utilization.",
    "block_index": 2,
    "block_start": "00:22:49",
    "block_end": "00:34:04",
    "connected_items": [
      {
        "timestamp": "00:22:49",
        "summary_point": "- You express concerns about vulnerabilities in open source scanners like Trevi and propose secure Docker images as a service. (00:22:49)",
        "transcript_part": "00:22:49 - You:\n\nvulnerabilities that they can that then can be exploited and it's very easy to circumvent these open source scanners like Trevi and so basically if you're malicious you will hide it just a tiny bit better and it will not be picked up.\n\n00:23:07 - Michael:\n\nYeah, exactly."
      },
      {
        "timestamp": "00:23:08",
        "summary_point": "- Michael explains the concept of transforming Docker images to zero CVE images by removing unnecessary components and using the package manager for dependencies. (00:23:08)",
        "transcript_part": "00:23:08 - You:\n\nAnd the question there is why isn't there a thing that is doing? kind of secure Docker images as a service where you can basically like put your Docker image Hub and just like an antivirus it tells you oh it has Oh these things inside of it that\n\n00:23:31 - Michael:\n\nOh otherwise, and because when I have it in thoughts secure images servers, it's not really using existing images in the registry. No, it's converting an image to a new image with with CVS and\n\n00:23:45 - You:\n\nhmm So it's taking the image that you want to use and transforming that into a zero CV image.\n\n00:23:53 - Michael:\n\nand yes, yes with with the whole depression coverage where you can Where you\n\n00:23:57 - You:\n\nhow How do they do that? How do you turn an image that has\n\n00:24:01 - Michael:\n\nput"
      },
      {
        "timestamp": "00:24:05",
        "summary_point": "- You inquire about the process of converting images and discuss the importance of reducing vulnerabilities. (00:24:05)",
        "transcript_part": "00:24:05 - You:\n\ninto an image? That doesn't?\n\n00:24:07 - Michael:\n\nVery easy, because most let's say most applications use clip C. or muscle library for interacting with kernel You can very easily use now all the concept. The concept is easy, but you can use this relish concept. Which which means you don't have anything in your image, except that that you really need in your image. So let's say you should Debian or Alpine or something else. You you run your application on it your Java application or your go Application you get like 99% overhead If you know what I mean because your application only needs that one person. They do not need that 99% of over it and most of the CVS are in that 99% of"
      },
      {
        "timestamp": "00:25:05",
        "summary_point": "- Michael elaborates on the need for a fully covered image and how to achieve it through minimal dependencies. (00:25:05)",
        "transcript_part": "00:25:05 - You:\n\nRight. So what you will basically do is you will in your application kind of or through the application you will know which kind of Kernel operations it needs and\n\n00:25:19 - Michael:\n\nYeah, libraries dependencies on so the Java yava needs example of java yava needs Etsy password. They file it needs because it needs a user it needs Lipsy. Because it needs to interact and that's it and Java yava runtime engine enter package manager calls. You need to do everything in the package manager. But so four five components only for you.\n\n00:25:51 - You:\n\nright and basically all the rest you just remove of the image\n\n00:25:58 - Michael:\n\nYeah, it's it's otherwise you start with the concept that if in my mind that chingard's also use that concept is you start with the completely empty image.\n\n00:26:09 - You:\n\nyou"
      },
      {
        "timestamp": "00:26:10",
        "summary_point": "- You summarize the approach of installing necessary dependencies and increasing coverage through the package manager. (00:26:10)",
        "transcript_part": "00:26:10 - Michael:\n\nComplete empty nothing in it. So as something like a scratch image. that's you install the dependencies on it from Let's say Alpine or Debian. And the package manager and you force everything through the package manager. So if you have like a Java application or Because you the package manager guarantee that you have a fully coverage of everything that you have done. So if you use a trivia scan, you will not only scan 20% anymore. You will skin 100% your s balls.\n\n00:26:49 - You:\n\nso basically instead of doing a copy you will force that through the\n\n00:26:57 - Michael:\n\nYes.\n\n00:26:57 - You:\n\nthe\n\n00:26:59 - Michael:\n\nYeah, because why because otherwise you will not have a fully covered coverage. You will only have a percent cover.\n\n00:27:05 - You:\n\nYes.\n\n00:27:06 - Michael:\n\nor something like that or you don't not even know what coverage is so it can also be one person.\n\n00:27:13 - You:\n\nhmm But\n\n00:27:13 - Michael:\n\nthe problem\n\n00:27:16 - You:\n\nmm-hmm, and that reduces the vulnerabilities because\n\n00:27:20 - Michael:\n\nThe package manager does not use there are two use cases. There's a use case you want a fully coverage. So you want to to guarantee?\n\n00:27:29 - You:\n\nSo the fully I understand how this increases the coverage.\n\n00:27:33 - Michael:\n\nSo yes, that's the coverage part and this CVS decreases because you use a minimal image. So this relish image concept. so you because The example I gave I gave earlier is with Java if you use Java now, let's take them around 17 from Docker up. You will get like a three-hundred or 250 300mb megabyte image. With Java and you only need Java, of course. but but it has so much stuff in it that you do not need it as a and and\n\n00:28:12 - You:\n\nMm-hmm.\n\n00:28:14 - Michael:\n\nhidden stuff also. But also that stuff that the supplier does not care they want to they focus on functionality. So let's add just at this because it already works. We don't care if Because we focus on functionality not on security. So you can also do the same with the modern but with five dependencies, so let's say you have the moving image.\n\n00:28:38 - You:\n\nright\n\n00:28:39 - Michael:\n\non the internet that has 300 dependencies, but you actually only\n\n00:28:42 - You:\n\nAnd you know, which one which five\n\n00:28:43 - Michael:\n\nneed five.\n\n00:28:48 - You:\n\nneed? Because that's inside. the that's defined inside the program or\n\n00:28:56 - Michael:\n\nIt's on the internet. You can use many references for that. So Java users. Ldd you have a command line actually can check. like\n\n00:29:07 - You:\n\nI'm just thinking, you know, is there an automated way because I might be\n\n00:29:10 - Michael:\n\nYeah.\n\n00:29:10 - You:\n\nusing Java. I might be using python that might be using something else.\n\n00:29:15 - Michael:\n\nOf course, there's automobile but it needs building it needs time for that. Of course. It's not ready now, but you can create a pipeline that As like a subscription model like you you define in camel format or something like that for wait you just from the internet do I?\n\n00:29:31 - You:\n\nthat\n\n00:29:32 - Michael:\n\nDo I want to convert?\n\n00:29:33 - You:\n\nOnally what it does is it makes it zero trust in the sense that it says\n\n00:29:39 - Michael:\n\nYeah.\n\n00:29:39 - You:\n\nall the permissions that are not used all the programs that are not used. We remove them and we just created so so I'm gonna rephrase what the idea that you just Mentioned and I'm going to rephrase it in my own words.\n\n00:29:55 - Michael:\n\nYeah."
      },
      {
        "timestamp": "00:29:56",
        "summary_point": "- Michael addresses software bill of materials and the goal of reducing vulnerabilities by removing unused permissions and programs. (00:29:56)",
        "transcript_part": "00:29:56 - You:\n\nAnd so there are lots of vulnerabilities in Docker Hub images to remediate this. We want two things. We want to add coverage and we want to remove vulnerabilities. To do this. We will first only install the dependencies that we need. And no dependency that is not needed. That is not. And the second thing is that we're going to install all of these dependencies through the package manager. which means that we're not going to That we're going to get a higher coverage when using these traffic checks.\n\n00:30:43 - Michael:\n\nsoftware bill of material. That's also like forced through the US government like in 2020. I think as a way to mitigate supply chain risks, but the problem is with asthma is the same as is all the scanning tools the early check the package manager. So the coverage is not also for it as bombs.\n\n00:31:06 - You:\n\nright\n\n00:31:06 - Michael:\n\nSo that we have fully trusted the solution will only trust it image and solution.\n\n00:31:14 - You:\n\nThat makes sense. Um, so basically it's to reduce your software develop material or to make it more accurate and to to increase\n\n00:31:22 - Michael:\n\nYeah accurate."
      },
      {
        "timestamp": "00:31:27",
        "summary_point": "- You discuss the importance of accurate software build materials and increasing CVE tracking to improve image security. (00:31:27)",
        "transcript_part": "00:31:27 - You:\n\nthe the amount of cve tract.\n\n00:31:31 - Michael:\n\nYeah, yeah, exactly. And the thing is it's very you cannot like go from 200 300 CVS to zero series with the same application with the same version also. So that's the how to say to a very\n\n00:31:47 - You:\n\nhmm"
      },
      {
        "timestamp": "00:31:50",
        "summary_point": "- Michael emphasizes the impact of the approach in decreasing organization CVEs and ensuring the trustworthiness of images. (00:31:50)",
        "transcript_part": "00:31:50 - Michael:\n\ngood solution to decrease the organization CVS together worldly. And you have a guarantee that you do not. Pull something that is not good.\n\n00:32:02 - You:\n\nRight, and so basically the the step and and basically it would be quite simple to implement as well. Basically you will just instead of\n\n00:32:10 - Michael:\n\nYeah.\n\n00:32:13 - You:\n\nsaying Docker image dot XYZ you Docker image Dot Chain guard or dots whatever ink drop or whatever and it's it's just gonna\n\n00:32:24 - Michael:\n\nour question"
      },
      {
        "timestamp": "00:32:26",
        "summary_point": "- You highlight the simplicity of implementing the image transformation process and discuss potential licensing models based on per image usage. (00:32:26)",
        "transcript_part": "00:32:26 - You:\n\nrecreate these images for you as you\n\n00:32:29 - Michael:\n\nThere are many ways of Licensing.\n\n00:32:30 - You:\n\nrequest them.\n\n00:32:32 - Michael:\n\nlike like let's say you can also What I have in mind is to sell a architect for specific customers. So let's say you have an image attack. So that is one if you use that then it's it's your artifact and then it the licensing will be on on that part. Like let's say the artifacts that you use you will pay for that. As a customer, of course.\n\n00:32:58 - You:\n\nso basically per image that you use\n\n00:33:01 - Michael:\n\nYeah, yeah, very image Tech indeed. Yeah. and there's also another thing but it's for the future because\n\n00:33:11 - You:\n\nThis is interesting cool. So and by the way, can you just walk me through what percentage of this idea does chingard to?"
      },
      {
        "timestamp": "00:33:23",
        "summary_point": "- Michael attributes a significant portion of the discussed idea to Shin guards and explains their current process of recreating images with necessary dependencies. (00:33:23)",
        "transcript_part": "00:33:23 - Michael:\n\nShin guards just a very big percentage of this idea. It's only not focused on your Europe.\n\n00:33:30 - You:\n\nOkay, but basically what they already do is they already take all. Your go dream related.\n\n00:33:39 - Michael:\n\nYeah.\n\n00:33:39 - You:\n\ntake the image take only the dependencies that they need and recreate the entire thing using commands.\n\n00:33:48 - Michael:\n\nYes. Yes exactly. I do not know how their licensing model works. There's just think that I'm part of that could be handy. But they do a very big part. It's from them that I get this these ideas. It's not something that I have"
      }
    ]
  }
]